// Code generated by mockery v1.0.0. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockTransactioner is an autogenerated mock type for the Transactioner type
type MockTransactioner struct {
	mock.Mock
}

// Begin provides a mock function with given fields:
func (_m *MockTransactioner) Begin() {
	_m.Called()
}

// Clear provides a mock function with given fields:
func (_m *MockTransactioner) Clear() {
	_m.Called()
}

// Count provides a mock function with given fields: value
func (_m *MockTransactioner) Count(value string) (string, bool) {
	ret := _m.Called(value)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(value)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0
func (_m *MockTransactioner) Delete(_a0 string) (string, bool) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *MockTransactioner) Get(_a0 string) (string, bool) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// GetTrxn provides a mock function with given fields:
func (_m *MockTransactioner) GetTrxn() [][]string {
	ret := _m.Called()

	var r0 [][]string
	if rf, ok := ret.Get(0).(func() [][]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]string)
		}
	}

	return r0
}

// HasTransaction provides a mock function with given fields:
func (_m *MockTransactioner) HasTransaction() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Rollback provides a mock function with given fields:
func (_m *MockTransactioner) Rollback() {
	_m.Called()
}

// Set provides a mock function with given fields: _a0, _a1
func (_m *MockTransactioner) Set(_a0 string, _a1 string) (string, bool) {
	ret := _m.Called(_a0, _a1)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string, string) bool); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}
